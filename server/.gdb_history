break 
break blockchain.c:364
run
next
print genesis_block->data.nounce
break giveme_network_packet_handle_publish_key
run
print blockchain
print blockchain.public_keys.count
break blockchain.c:41
run
print key
print *key
print block->data.validator_key
next
break blockchain.c:432
run
next
print genesis_block.hash
print genesis_block.data 
print genesis_block.data.nounce
break giveme_blockchain_get_verifier_key 
run
c
next
print total_verifiers
next
print current_five_minute_block 
next
print next_verifier
break void giveme_blockchain_handle_added_block(struct block *block)
n
break giveme_blockchain_handle_added_block
run
next
break key.c:235
run
print buf
break key.c:235
run
print buf
break key.c:224
run
next
break key.c:229
run
print pub_key
break key.c:229
run
print pkey
print *pkey
print allocated_length
break key.c:229
run
print allocated_length
print pub_key
break key.c:229
run
print pub_key
print allocated_length
break bin2hex
run
next
print output
next
print output
print output[1]
print output[2]
print output[3]
print output[4]
break generate_key
run
next
print pub_key
next
print pub_key_hexed
next
print pri_allocated_length
print pr_key
print pri_key
next
print pri_key_hexed
print pub_key_hexed
next
break key.c:280
run
print size
break main.c:57
run
print buf
print buf_out
break hex2bin
run
next
print reslt
print result
break misc.c:58
run
print buf
print input[i]
c
print i
print buf
print input[i]
next
c
break hex_to_ascii
c
next
print c
print d
next
print high
print low
break main.c:54
run
print buf_out
break giveme_tcp_send_bytes
run
next
print amount
next
print res
next
print res
next
break giveme_tcp_send_packet
c
run
next
print res
next
c
next
print res
next
next
print res
c
break blockchain.c:438
run
break blockchain.c:438
run
print genesis_block
print genesis_block.hahsh
print genesis_block.has
print genesis_block.data.nounce
run
bt
thread 2
bt
c
run
thread 2
bt
break giveme_network_ip_connected
run
next
run
bt
run
download blockchain from peer
    handle SIGPIPE nostop noprint pass
break network.c:819
run
break     handle SIGPIPE nostop noprint pass
    handle SIGPIPE nostop noprint pass
run
break network.c:819
c
next
print end_hash
print total_blocks
next
c
break network.c:1084
run
c
c
c
c
next
print key
print *key
c
c
c
c
c
break giveme_blockchain_get_verifier_key 
run
c
c
c
c
next
next
print total_verifiers
next
print current_five_minute_block 
c
./gi
break     handle SIGPIPE nostop noprint pass
    handle SIGPIPE nostop noprint pass
break giveme_blockchain_get_verifier_key
run
next
print next_verifier_index 
print current_five_minute_block 
print current_five_minute_block  % total_verifiers-1
print total_verifiers 
break giveme_blockchain_get_verifier_key
run
    handle SIGPIPE nostop noprint pass
c
next
print total_verifiers 
next
print current_five_minute_block 
next
print next_verifier_index 
print current_five_minute_block % 1
print (current_five_minute_block+61) % 1
print (current_five_minute_block+61+61) % 1
print (current_five_minute_block+61+61+61) % 1
1 % (current_five_minute_block)
print 1 % (current_five_minute_block)
print 1 % (current_five_minute_block+61)
print 1 % (current_five_minute_block+61+61)
61 % 1
print 61 % 1
print (61+61) % 1
print (61+61+61) % 1
print (61*2000) % 1
print (60*2000) % 1
print (60*200000) % 1
print (61*2000) % 1
print (61*2000) % 2
print (61*2001) % 2
print (61*2002) % 2
print (61*2003) % 2
print (61*2003) % 5
print (61*2004) % 5
print (61*2005) % 5
print (61*2006) % 5
print (61*1) % 5
print (61*2) % 5
print (61*3) % 5
print (61*3) % 5
print (61*0) % 5
print (61*1) % 5
print (61*4) % 5
print (61*9) % 5
print (61*10) % 5
print (61*11) % 5
print (61*11) % 2
