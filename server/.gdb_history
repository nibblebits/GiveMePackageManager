print *(int*)(vector_at(test_vec, 52))
break giveme_network_relay
run
break giveme_network_initialize_awaiting_transactions
run
next
print s
next
print total_bytes
print network.awaiting_transactions.fp
print s.st_size
print s.st_size
print s
break giveme_network_initialize_awaiting_transactions
run
next
print s.st_size
print s
break network.c:2435
run
break network.c:2435
run
break network.c:2526
run
print total_bytes
print exists
print network.awaiting_transactions.fp
print s
break network.c:2514
run
prints
print s
print s.st_
print s.st_size 
break blockchain.c:523
run genesis
break blockchain.c:523
run genesis
print genesis-block
print genesis_block
print genesis_block.data.nounce
print genesis_block.signature.data_hash
break giveme_package_create
run
next
next
step
break network.c:1228
run
next
print awaiting_transaction
print block->data.shared_signed_data
print block->data
print block->data.transactions
print network.awaiting_transactions 
print network.awaiting_transactions.data[0]
print network.awaiting_transactions.data[0].data.shared_signed_data
print network.awaiting_transactions.data[0].shared_signed_data
print network.awaiting_transactions.data[0].packet.data.shared_signed_data
print network.awaiting_transactions.data[1].packet.data.shared_signed_data
print network.awaiting_transactions.data[2].packet.data.shared_signed_data
print network.awaiting_transactions.data[3].packet.data.shared_signed_data
run
break upnpc.:225
break upnp.c:225
run
print urls.rootdescURL 
break upnp.c:225
run
print urls
print data
print urls
print remoteHost
break upnp.c:238
run
print externalIpAddress 
c
c
break giveme_network_dataexchange_handle_package_request_chunk
run
c
break giveme_network_dataexchange_connection
run
break network.c:385
run
break network.c:385
run
break giveme_network_dataexchange_accept_thread
run
next
c
run
 bt
c
break network.c:628
run
print res
break network.c:627
run
step
next
next
break network.c:627
run
break giveme_tcp_send_bytes
c
next
print res
print ptr
print amount_left
print client
print *ptr
print *( const char*)(ptr)
break network.c:626
run
print res
next
break network.c:696
break network.c:700
run
break network.c:625
run
next
print res
print packet
print *packet
print packet+giveme_tcp_payload_offset()
print *(struct giveme_tcp_pingpacket+giveme_tcp_payload_offset()
print *(struct giveme_tcp_ping*)packet+giveme_tcp_payload_offset()
print *(struct giveme_tcp_packet_ping*)packet+giveme_tcp_payload_offset()
print *((struct giveme_tcp_packet_ping*)packet)+giveme_tcp_payload_offset()
print *((struct giveme_tcp_packet_ping*)packet+giveme_tcp_payload_offset())
print *((struct giveme_tcp_packet_ping*)packet+giveme_tcp_payload_offset())
print packet->type
print packet->data.type
print packet.data.ping
print &packet.data.ping
print *((struct giveme_tcp_packet_ping*)packet+giveme_tcp_payload_offset())
print ((struct giveme_tcp_packet_ping*)packet+giveme_tcp_payload_offset())
print &packet.data.ping
print ((struct giveme_tcp_packet_ping*)packet+giveme_tcp_payload_offset())
print ((struct giveme_tcp_packet_ping*)packet+giveme_tcp_payload_offset()-1080)
pint packet
print packet-
print giveme_tcp_payload_offset
print *giveme_tcp_payload_offset
print *giveme_tcp_payload_offset()
print giveme_tcp_payload_offset()
print packet+1448
print &packet.data.shared_signed_data
print packet
print packet+1
print &packet.data.shared_signed_data
print &packet.data.ping
print packet+1
print packet+2
print packet+((const char*)(1))
print packet+((int)(1))
print packet+((int)(2))
print pac
print &packet.data.ping
print (int*)(packet+1)
print (int*)(packet+2)
print (int*)(packet)+1
print (int*)(packet)+2
print (int*)(packet)+3
print (char*)(packet)+3
print (char*)(packet)+5
print (char*)(packet)+giveme_tcp_payload_offset()
run
c
c
run
break network.c:774
run
c
c
c
c
c
delete
c
break network.c:774
run
bt
break network.c:774
run
c
c
c
info threads
break network.c:738
run
bt
print packet
print *packet
print packet->type
print packet->data.type
break giveme_network_af_unix_handle_packet_my_awaiting_transactions
run
run
    handle SIGPIPE nostop noprint pass
run
info threads
c
run
run
run
run
break giveme_network_action_schedule
run
next
break giveme_network_action_thread
c
run
next
bt
break giveme_network_action_execute
run
break giveme_network_action_thread
run
next
print action
print vector_count(network.action_queue.action_vector)
next
c
break giveme_network_connection_connect_all_action
run
bt
break main
run
next
next
info threads
bt
thread 2
info
bt
thread 3
bt
thread 4
bt
break network.c:107
run
print action
print *action
step
next
step
next
print *action
next
print *action
nexxt
next
print *action
